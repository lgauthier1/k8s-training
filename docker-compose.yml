
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    deploy:
      replicas: 3  # Run 3 instances of the backend
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
        reservations:
          cpus: "0.2"
          memory: "256M"
    networks:
      app-network:
        aliases:
          - backend1
          - backend2
          - backend3

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    networks:
      - app-network
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana_dashboard.json:/etc/grafana/provisioning/dashboards/dashboard.json
      - ./monitoring/grafana_datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    networks:
      - app-network
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=10s"
      - "--store_container_labels=true"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # ðŸ”¥ Ajout du socket Docker


networks:
  app-network:
    driver: bridge

volumes:
  grafana-data:
    driver: local
